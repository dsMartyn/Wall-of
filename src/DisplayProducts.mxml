<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/halo" 
		 width="940" height="415" xmlns:events="flashx.textLayout.events.*" 
		 xmlns:local="*" xmlns:utils="com.utils.*" xmlns:valueObjects="valueObjects.*">
	
	
	<s:states>
		<s:State name="viewProducts" enterState="viewProducts_EnterState(event)" />
		<s:State name="editProduct"  enterState="editProducts_EnterState(event)" />
	</s:states>
	<fx:Metadata>
		/** menu_show raised when the menu should be shown again */	
		[Event(name="menuShow",type="flash.events.Event")]
	</fx:Metadata>
	
	
	<fx:Declarations>
		<!-- 
		 Status 1 = Current
		 Status 2 = Preview
		 Status 3 = Payment Waiting
		 Status 4 = Deleted for non-payment
		 Status 5 = Deleted 
		-->
		<valueObjects:TblProducts id="productFields" RowID="0"/>
		<valueObjects:TblProductsView id="productsView" RowID="0"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.events.CrudEvent;
			import com.utils.*;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.xml.SimpleXMLDecoder;
			
			import spark.events.*;
			private const gcs_DisplayMenu_Show:String = "menuShow";//event dispatcher
			

			
			private var po_fileRef:FileReference = new FileReference();
			private var urlUpload:URLRequest;
			
			[bindable]
			private var Database:DatabaseCRUD = DatabaseCRUD.getInstance();
			
			protected function btnBack_Click(event:MouseEvent):void
			{
				dispatchEvent(new Event(gcs_DisplayMenu_Show));
			}

			private function AssignFields():void
			{
				productFields.MemberID = Database.go_LoginFields.MemberID;
				
				if (txtAddressCounty.text != Database.pc_county)
					productFields.AddressCounty = this.txtAddressCounty.text;
				if (txtAddressEmail.text != Database.pc_email)
					productFields.AddressEmail = this.txtAddressEmail.text;
				if (txtAddressFax.text != Database.pc_fax)
					productFields.AddressFax = this.txtAddressFax.text;
				if (txtAddressMob.text != Database.pc_mob)
					productFields.AddressMob = this.txtAddressMob.text;
				if (txtAddressName.text != Database.pc_name)
					productFields.AddressName = this.txtAddressName.text;
				if (txtAddressPostCode.text != Database.pc_postcode)
					productFields.AddressPostCode = this.txtAddressPostCode.text;
				if (txtAddressStreet.text != Database.pc_street)
					productFields.AddressStreet = this.txtAddressStreet.text;
				if (txtAddressTel.text != Database.pc_tel)
					productFields.AddressTel = this.txtAddressTel.text;
				if (txtAddressTown.text != Database.pc_town)
					productFields.AddressTown = this.txtAddressTown.text;
				if (txtCompanyDesc.text != Database.pc_companyDesc)
					productFields.ItemDesc = this.txtCompanyDesc.text;
				if (txtCompanyName.text != Database.pc_companyName)
					productFields.ItemName = this.txtCompanyName.text;
				
				productFields.picUrl = this.txtPicUrl.text;
				productFields.GooglePostCode = this.txtMAPPostCode.text;
				productFields.YoutubeVideoUrl = this.txtVideoURL.text;
			}
			
			/*
			protected function btnPreview_Click(event:MouseEvent):void
			{
				productFields.status = 2; //preview
				AssignFields();

				Modify_Product();
			}*/
			
			protected function btnAccept_Click(event:MouseEvent):void
			{
				productFields.status = 1; //create
				AssignFields();
				
				Modify_Product();
			}
			
			protected function btnCancel(event:MouseEvent):void
			{
				var lo_Alert:Alert = new Alert();
				lo_Alert = Alert.show("Are you sure?","Going back will discard all changes!", Alert.YES | Alert.NO);
				lo_Alert.addEventListener(CloseEvent.CLOSE, Alert_Closed);
			}
			
			protected function Alert_Closed(event:CloseEvent):void
			{
				if (event.detail==Alert.YES) {
					trace('go away');
					currentState='viewProducts';
				}
			}
			
			
			private function Modify_Product():void
			{
				trace('update user');
				Database.addEventListener(CrudEvent.PRODUCT_CREATED, Product_Changed);
				Database.addEventListener(CrudEvent.PRODUCT_UPDATED, Product_Changed);
				
				if (productFields.RowID == 0)
					Database.CreateProduct(null, productFields);
				else
					Database.UpdateProduct(null, productFields);
					
			}
			protected function Product_Changed(event:CrudEvent):void
			{
				if (event.errored)
					Alert.show("Error updating product - " + event.errorMsg, "Error maybe duplicate company name");
				
				Database.removeEventListener(CrudEvent.PRODUCT_CREATED, Product_Changed);
				Database.removeEventListener(CrudEvent.PRODUCT_UPDATED, Product_Changed);
				trace('create product');
			}
			
	
			
			
			private function Upload_Error(e:IOErrorEvent):void
			{
				lblProgress.text = "Error uploading picture!";
				//trace('io error');	
			}
			
			
			private function Upload_Progress(e:ProgressEvent):void
			{
				var numPerc:Number = Math.round((Number(e.bytesLoaded) / Number(e.bytesTotal)) * 100);
				//progressBar1.setProgress(numPerc, 100);
				lblProgress.text = "Uploading Picture..." + numPerc + "%";
				//progressBar1.validateNow();
				
				//trace(e.bytesLoaded + ' ' + e.bytesTotal);
			}
			
			protected function Upload_FileSelect(e:Event):void
			{
				lblSize.text =  formatFileSize(po_fileRef.size);
				if ((po_fileRef.size / 1000) > 1000)
				{
					Alert.show("Picture size is too big! size must be less than 1MB...","Invalid file size");
					return;
				}
				
				
				//	trace('uploading picture');
				var uVars:URLVariables = new URLVariables();
				uVars.action = 'upload';
				uVars.filename = Database.go_LoginFields.MemberID.toString() + '_' + po_fileRef.name;
				
				urlUpload = new URLRequest("services/upload.php");
				urlUpload.data = uVars;
				urlUpload.method = URLRequestMethod.POST;
				
				// = new URLRequest("services/upload.php");
				po_fileRef.addEventListener(ProgressEvent.PROGRESS,Upload_Progress);
				po_fileRef.addEventListener(IOErrorEvent.IO_ERROR,Upload_Error);
				po_fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,Upload_Error); 
				po_fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, Upload_CompleteData);
				
			 	lblProgress.text = "Uploading Picture... 0%";
				po_fileRef.upload(urlUpload,'file');
			}
			
			private function Upload_CompleteData(e:DataEvent):void
			{
				/* Convert XMLNode to XMLDocument. */
				var xmlDoc:XMLDocument = new XMLDocument(e.data);
				var decoder:SimpleXMLDecoder = new SimpleXMLDecoder(true);
				var resultObj:Object = decoder.decodeXML(xmlDoc);

				this.txtPicUrl.text =  po_fileRef.name;
			
				if ('Message' == resultObj.variables.variable[0].name)
				{
					lblProgress.text = 'Error uploading file already exists.';
					//trace('test');
				}else if('Result' == resultObj.variables.variable[0].name)
				{
					lblProgress.text = "Uploading Picture... 100%!";
					//panel1_LogoPicTextInput.text =  resultObj.variables['variable'][0].value;
				}
				
			}
			
			private function formatFileSize(numSize:Number):String {
				var strReturn:String;
				numSize = Number(numSize / 1000);
				strReturn = String(numSize.toFixed(1) + " KB");
				if (numSize > 1000) {
					numSize = numSize / 1000;
					strReturn = String(numSize.toFixed(1) + " MB");
					if (numSize > 1000) {
						numSize = numSize / 1000;
						strReturn = String(numSize.toFixed(1) + " GB");
					}
				}                
				return "Size: " + strReturn;
			}
			
			protected function LocateFile():void
			{
				var ffImages:FileFilter = new FileFilter("Images", "*.jpg;*.gif;*.png");
				//var ffAll:FileFilter = new FileFilter("All files", "*.*");
				//var f:FileReferenceList = new FileReferenceList();
				po_fileRef.browse([ffImages]);
				po_fileRef.addEventListener(Event.SELECT, Upload_FileSelect);
			}
			
			
			protected function reset():void
			{
				txtAddressName.text = Database.pc_name;
				txtAddressStreet.text == Database.pc_street;
				txtAddressTown.text == Database.pc_town;
				txtAddressCounty.text = Database.pc_county;
				txtAddressPostCode.text = Database.pc_postcode;
				txtAddressEmail.text = Database.pc_email;
				txtAddressTel.text = Database.pc_tel;
				txtAddressMob.text = Database.pc_mob;
				txtAddressFax.text = Database.pc_fax;
				txtCompanyName.text = Database.pc_companyName;
				txtCompanyDesc.text = Database.pc_companyDesc;
			}
			
			protected function txt_focusIn(e:FocusEvent):void
			{
				
				if (e.currentTarget){
					e.currentTarget.selectionBeginIndex = 0;
					e.currentTarget.selectionEndIndex = e.currentTarget.length;
				}

				
				switch (e.currentTarget.id)
				{
					case 'txtMAPPostCode':
						if (e.currentTarget.text == Database.pc_mapsPostCode)
							e.currentTarget.text = '';
						break;
					case 'txtVideoURL':
						if (e.currentTarget.text == Database.pc_youTubeURL)
							e.currentTarget.text = '';
						break;
					case 'txtAddressName':
						if (e.currentTarget.text == Database.pc_name)
							e.currentTarget.text = '';
						break;
					case 'txtAddressStreet':
						if (e.currentTarget.text == Database.pc_street)
							e.currentTarget.text = '';
						break;
					case 'txtAddressTown':
						if (e.currentTarget.text == Database.pc_town)
							e.currentTarget.text = '';
						break;
					case 'txtAddressCounty':
						if (e.currentTarget.text == Database.pc_county)
							e.currentTarget.text = '';
						break;
					case 'txtAddressPostCode':
						if (e.currentTarget.text == Database.pc_postcode)
							e.currentTarget.text = '';
						break;
					case 'txtAddressEmail':						
						if (e.currentTarget.text == Database.pc_email)
						e.currentTarget.text = '';
						break;
					case 'txtAddressTel':
						if (e.currentTarget.text == Database.pc_tel)
							e.currentTarget.text = '';
						break;
					case 'txtAddressMob':
						if (e.currentTarget.text == Database.pc_mob)
							e.currentTarget.text = '';
						break;
					case 'txtAddressFax':
						if (e.currentTarget.text == Database.pc_fax)
							e.currentTarget.text = '';
					break;
					case 'txtCompanyName':
						if (e.currentTarget.text == Database.pc_companyName)
							e.currentTarget.text = '';
						break;
					case 'txtCompanyDesc':
						
						if (e.currentTarget.text.toString().length == Database.pc_companyDesc.toString().length)
							e.currentTarget.text = '';
						break;
					
				}
			}

			
			
			protected function focusOut(e:FocusEvent):void
			{
	
				switch (e.currentTarget.id)
				{
					case 'txtMAPPostCode':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_mapsPostCode;
						break;
					case 'txtVideoURL':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_youTubeURL;
						break;
					case 'txtAddressName':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_name;
						break;
					case 'txtAddressStreet':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_street;
						break;
					case 'txtAddressTown':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_town;
						break;
					case 'txtAddressCounty':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_county;
						break;
					case 'txtAddressPostCode':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_postcode;
						break;
					case 'txtAddressEmail':						
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_email;
						break;
					case 'txtAddressTel':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_tel;
						break;
					case 'txtAddressMob':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_mob;
						break;
					case 'txtAddressFax':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_fax;
						break;
					case 'txtCompanyName':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_companyName;
						break;
					case 'txtCompanyDesc':
						if (e.currentTarget.text == '')
							e.currentTarget.text = Database.pc_companyDesc;
						break;
					
				}
			}

			private var ProductList:ArrayCollection = new ArrayCollection();
			private var CurrentPage:Number = 0;
			protected function GetProductViewInfo(event:CrudEvent):void
			{
				if (event.valid == false)
				{
					Alert.show(event.errorMsg, "Error getting products");
				}else{
					trace("got product view: " + Database.go_ProductsView.length);
				
					
					var tmp:TblProductsView = Database.go_ProductsView[0];
					
					if (tmp.count > Database.MAX_RESULTS_VIEW)
					{
						if (ProductList.length > 0)
							ProductList.removeItemAt(ProductList.length-1);
					}
					
					ProductList.addAll(Database.go_ProductsView);
					
					if (tmp.count > Database.MAX_RESULTS_VIEW)
					{
						var productTemp:TblProductsView = new TblProductsView();
						productTemp.Name = "Load " + Database.MAX_RESULTS_VIEW + " more items...";
						productTemp.Category = "Load More...";
					//	productTemp.RowID = -1;
						ProductList.addItem(productTemp);
					}
					
					dataGrid.dataProvider = ProductList;
				}
			}


			
			protected function editProducts_EnterState(event:FlexEvent):void
			{
				reset();
				this.txtAddressCounty.text = this.productFields.AddressCounty;
				this.txtAddressEmail.text = this.productFields.AddressEmail;
				this.txtAddressFax.text = this.productFields.AddressFax;
				this.txtAddressMob.text = this.productFields.AddressMob;
				this.txtAddressName.text = this.productFields.AddressName;
				this.txtAddressPostCode.text = this.productFields.AddressPostCode;
				this.txtAddressStreet.text = this.productFields.AddressStreet;
				this.txtAddressTel.text = this.productFields.AddressTel;
				this.txtAddressTown.text = this.productFields.AddressTown;
			
				this.txtCompanyName.text = this.productFields.ItemName;
				this.txtCompanyDesc.text = this.productFields.ItemDesc;
				this.txtMAPPostCode.text = this.productFields.GooglePostCode;
				this.txtPicUrl.text = "";
				this.txtVideoURL.text = this.productFields.YoutubeVideoUrl;
			}
			
			protected function viewProducts_EnterState(event:FlexEvent):void
			{
				CurrentPage = 0;
				ProductList.removeAll();
				
				Database.addEventListener(CrudEvent.GET_PRODUCTVIEW_INFO, GetProductViewInfo);
				Database.GetProductView(null, Database.go_LoginFields.MemberID, 0);
				// TODO Auto-generated method stub
			}

			protected function gotProductInfo(event:CrudEvent):void
			{
				trace("Got Info");	
				this.productFields = Database.go_ProductFields;
				currentState="editProduct";
			}
					
			protected function dataGrid_itemDoubleClickHandler(event:ListEvent):void
			{
				//if load more tehn do it!
				var pv:TblProductsView = this.dataGrid.selectedItem as TblProductsView;
				if (pv.RowID == 0)
				{
					CurrentPage += Database.MAX_RESULTS_VIEW;
					Database.addEventListener(CrudEvent.GET_PRODUCTVIEW_INFO, GetProductViewInfo);
					Database.GetProductView(null, Database.go_LoginFields.MemberID, CurrentPage);
				}else if(pv.RowID > 0){
					//edit product
					Database.addEventListener(CrudEvent.GET_PRODUCTINFO, gotProductInfo);
					Database.GetProduct(null,pv.RowID);
				}
				
			}

	

		]]>
	</fx:Script>
	

	<s:Label x="410.8" y="23.4" text="Edit Products" fontSize="18" verticalAlign="middle" fontWeight="bold" includeIn="viewProducts" />
	<s:Button includeIn="viewProducts" label="New Product"  id="btnNewProuct" x="655.65" y="345.3" />
	<s:Button includeIn="viewProducts" x="753.75" y="345.3" id="btnDelete"  label="Delete"  />
	<s:Button includeIn="viewProducts" x="116" y="346" label="Edit Product" id="btnEditProduct" click="currentState='editProduct'"/>
	<mx:DataGrid includeIn="viewProducts" 
				 id="dataGrid" 
				 width="708"
				 doubleClickEnabled="true" x="116.15" y="76" height="262" dataProvider="{productsView}" itemDoubleClick="dataGrid_itemDoubleClickHandler(event)"  >
		<mx:columns>
			<mx:DataGridColumn dataField="RowID" headerText="ID" width="75"/>
			<mx:DataGridColumn headerText="Name" dataField="Name" width="250"/>
			<mx:DataGridColumn dataField="Category" headerText="Category" width="250"/>
			<mx:DataGridColumn headerText="Clicks" dataField="Clicks" width="70"/>
			<mx:DataGridColumn dataField="Image" headerText="Image" width="65"/>
			<mx:DataGridColumn dataField="YouTube" headerText="YouTube" width="74"/>
			<mx:DataGridColumn dataField="Map" headerText="Map" width="60"/>
			<mx:DataGridColumn dataField="Keywords" headerText="Keywords"/>
		</mx:columns>
	</mx:DataGrid>
	<s:Button id="btnBack" x="10" y="384" label="Back"  click="btnBack_Click(event)" includeIn="viewProducts"/>
	
	
	
	<s:Border id="brdLogo" x="0" y="0" width="200" height="200" borderWeight="2"  includeIn="editProduct">
		<mx:Label x="10" y="38" text="Upload Image" width="180" textAlign="center" />
		<mx:Button id="btnBrowse" x="65" y="70" label="Browse" click="LocateFile();" />
		<mx:Label id="lblSize" x="10" y="106" text="Size: 0kb" width="180"  textAlign="center"/>
		<mx:Label id="lblProgress" x="10" y="134"  text="Progress 0%" width="180" textAlign="center" height="22"/>
		<mx:Text  text="Upload Picture" top="0" left="0" right="0" bottom="380" condenseWhite="true" textAlign="center"   fontAntiAliasType="advanced" fontSize="14"   fontWeight="bold" textDecoration="none" color="#0018FF"/>
		<mx:TextInput id="txtPicUrl" x="20" y="168" visible="false"/>
	
	</s:Border>

	
	<s:Border id="brdDetails" width="432"  x="214" y="0" height="410" borderWeight="2"  includeIn="editProduct" >
	
		<mx:TextArea  id="txtCompanyName" focusOut="focusOut(event)"   focusIn="txt_focusIn(event)" condenseWhite="true" textAlign="center"  borderVisible="false"  fontAntiAliasType="advanced" fontSize="19"   fontWeight="bold"  color="#0036FF"  includeIn="editProduct"  x="3" y="1" height="30" width="422"/>
		<mx:TextArea  id="txtCompanyDesc" focusOut="focusOut(event)"  focusIn="txt_focusIn(event)" borderVisible="false" includeIn="editProduct" top="33" left="0" right="0" bottom="38" condenseWhite="true"   fontAntiAliasType="advanced" />
		
		
		<s:Button label="Cancel"   x="7" y="379" click="btnCancel(event);" />
		<mx:Button click="btnAccept_Click(event)" x="352" y="379" label="Accept" />
		<s:Button x="84" y="379" label="Keywords"  />
		<s:Label x="163" y="384" text="0 Keywords"/>
	
	</s:Border>
	
	<s:Border id="brdContactDetails" width="200"  x="0" y="210" height="200" borderWeight="2"  includeIn="editProduct">
		
		<mx:Text  text="Contact Details" top="0" left="0" right="0" bottom="380" condenseWhite="true" textAlign="center"   fontAntiAliasType="advanced" fontSize="14"   fontWeight="bold" textDecoration="none" color="#0018FF"  includeIn="editProduct" />

		
		<mx:TextInput id="txtAddressName" focusOut="focusOut(event)" focusIn="txt_focusIn(event)"  x="20" y="26" borderVisible="false"  textAlign="center" />
		<mx:TextInput id="txtAddressStreet" focusOut="focusOut(event)"  focusIn="txt_focusIn(event)" x="20" y="44" borderVisible="false"  textAlign="center" />
		<mx:TextInput id="txtAddressTown" focusOut="focusOut(event)"  focusIn="txt_focusIn(event)" x="20" y="62" borderVisible="false"  textAlign="center" />
		<mx:TextInput id="txtAddressCounty"   focusOut="focusOut(event)" focusIn="txt_focusIn(event)" x="20" y="80" borderVisible="false"  textAlign="center" />
		<mx:TextInput id="txtAddressPostCode"  focusOut="focusOut(event)"  focusIn="txt_focusIn(event)" x="20" y="98" borderVisible="false"  textAlign="center" />
					  
		<mx:TextInput id="txtAddressEmail" focusOut="focusOut(event)"  focusIn="txt_focusIn(event)" x="20" y="120" borderVisible="false"  textAlign="center" />
		<mx:TextInput id="txtAddressTel"  focusOut="focusOut(event)" focusIn="txt_focusIn(event)" x="20" y="138" borderVisible="false"  textAlign="center" />
		<mx:TextInput id="txtAddressMob"  focusOut="focusOut(event)"  focusIn="txt_focusIn(event)"  x="20" y="156" borderVisible="false"  textAlign="center" />
		<mx:TextInput id="txtAddressFax" focusOut="focusOut(event)" focusIn="txt_focusIn(event)"  x="20" y="174" borderVisible="false"  textAlign="center" />

	</s:Border>
	
	<s:Border id="brdMap" x="659" y="210" width="280" height="200" borderWeight="2"  includeIn="editProduct" >
		<mx:TextInput id="txtMAPPostCode" x="43" y="84" textAlign="center" height="19"  width="194" focusOut="focusOut(event)" focusIn="txt_focusIn(event)"  />
		<mx:Label x="15" y="50" text="Enter street and post code for Google Maps"/>
		<mx:Text  text="Google Maps" top="0" left="0" right="0" bottom="380" condenseWhite="true" textAlign="center"   fontAntiAliasType="advanced" fontSize="14"   fontWeight="bold" textDecoration="none" color="#0018FF"/>
	</s:Border>
	
	
	<s:Border id="brdVideo" x="659" y="0" width="280" height="199" borderVisible="true"  borderWeight="2" includeIn="editProduct"  >	
		<mx:TextArea id="txtVideoURL" x="71" y="86"  height="19" focusOut="focusOut(event)" focusIn="txt_focusIn(event)"  width="138"/>
		<mx:Label x="68" y="54" text="Enter Youtube Video URL"/>
		<mx:Text  text="YouTube Video" top="0" left="0" right="0" bottom="380" condenseWhite="true" textAlign="center"   fontAntiAliasType="advanced" fontSize="14"   fontWeight="bold" textDecoration="none" color="#0018FF"/>
	</s:Border>
	
	
	
	
</s:Group>