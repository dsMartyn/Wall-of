<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:mx="library://ns.adobe.com/flex/halo"
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:fx1="org.ascollada.fx.*"
	
			   minWidth="1024" minHeight="768" 
			   xmlns:ns1="*"
			   width="1024" height="601"
			   backgroundColor="0x000000"
			   currentState="Display3D"
			   frameRate="60"  xmlns:utils="com.utils.*">
	<s:states>
		<s:State name="Display3D"/>
		<s:State name="DisplayPlane" enterState="state1_enterStateHandler(event)" />
		<s:State name="MenuPlane" enterState="state2_enterStateHandler(event)"/>
	</s:states>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<s:transitions>
		<s:Transition toState="Display3D">    
			<s:Sequence>
				<s:Fade alphaFrom="0.0" alphaTo="1.0" duration="100" 
						targets="{[cmpDisplayPlane, cmpDisplayMenu]}"/>
			</s:Sequence>
		</s:Transition> 
		
		<s:Transition toState="DisplayPlane">    
			<s:Sequence>
				<s:Fade alphaFrom="0.0" alphaTo="1.0" duration="1000" 
						targets="{[cmpDisplayPlane]}"/>
			</s:Sequence>
		</s:Transition>
	</s:transitions>
	
	<mx:HRule width="950" strokeColor="#000000" shadowColor="#2F2F2F" x="38" y="74"/>
	<mx:Image id="logo_header" width="210" height="90"  source="@Embed('assets/embedded/gui/logoheader.png')"  x="33" y="1"/>
	<s:Label  text="Business" color="#ABABAB" width="143" textAlign="right" x="37" y="77" />
	<mx:Label text="35fps" id="lblFps" color="#ABABAB" fontSize="10" x="2" y="2" />
	
	<mx:MenuBar id="myMenuBar" labelField="@label" 
				width="598"
				 height="40" x="390.05" y="30" 
				 baseColor.Display3D="#071769" 
				 selectionColor.Display3D="#297AE9"
				 rollOverColor.Display3D="#066AFF"
				 color.Display3D="#FFFFFF"
				 visible="false"
				 >
		
		<fx:XMLList >
			<menuitem label="Home"/>
			<menuitem label="About"/>
			<menuitem label="Stats"/>
			<menuitem label="Help"/>
			<menuitem label="SEO"/>
			<menuitem label="Email a friend"/>
			<menuitem label="Contact Us"/>
			<menuitem label="Advertise"/>
			<menuitem label="Login"/>
		</fx:XMLList>
	</mx:MenuBar>
	
	<s:Border  id="brdDisplay" backgroundColor="0xFFFFFF" height="437" width="964"  x="32" y="92" cornerRadius="10" />
	<!-- Display components to be shown inside the tv display region -->
	<ns1:Display3D id="cmpDisplay3D" displayVisible="Display3D_Visible(event)" displayPlane="Display3D_Plane(event)" initialize="Display3D_Init(event);" includeIn="Display3D"  x="42" y="103"  width="945" height="415"/>
	<ns1:DisplayMenu id="cmpDisplayMenu" displayShow="cmpDisplay3D.Display3D_Show(event)" includeIn="MenuPlane"  x="42" y="103"  width="945" height="415"/>
	<ns1:DisplayPlane id="cmpDisplayPlane" displayShow="cmpDisplay3D.Display3D_Show(event)" includeIn="DisplayPlane"  x="42" y="103"  width="945" height="415"/>

	
	<s:DropDownList  includeIn="Display3D" width="99"
					id="ddlSort"
					prompt="Order By" 
					x="42.2" y="551">
		<s:ArrayCollection>
			<fx:String>Price High</fx:String>
			<fx:String>Price Low</fx:String>
			<fx:String>Category</fx:String>
		</s:ArrayCollection>
	</s:DropDownList>
	
	<s:Button  includeIn="Display3D" label="&lt;" 
			   id="btnBack"
			   width="28" 
			   x="870.85" y="551"/>
	
	 
	<s:DropDownList includeIn="Display3D" id="cmbPages" width="62" x="898.35" y="551"  >
		<s:ArrayCollection id="cmbPagesArray" />
	</s:DropDownList>
	
	
	<s:Button includeIn="Display3D" label="&gt;"
			   id="btnForward"
			   width="28" 
			   x="958.7" y="551"/>
	
	<mx:TextInput includeIn="Display3D" id="txtSearch" height="20" width="288" x="334" y="552"/>
	<s:Button includeIn="Display3D" id="btnSearch" x="623" y="551" label="Search" click="search_Click(event)" />
	<mx:HRule width="950" strokeColor="#000000" shadowColor="#2F2F2F" x="38" y="540"/>
	<mx:LinkButton  click="btnMenu_Click(event)"  label="Menu" id="btnMenu"  fontAntiAliasType="advanced" color="#0631D1" fontSize="18" width="76" x="919.95" y="48" enabled="false"/>
	<s:Label  x="694" y="33" text="Not logged in." color="#C10000" width="291" textAlign="right" id="lblLoggedIn" />
	<s:Label includeIn="Display3D" x="853" y="579" text="Showing page 0 of 0" color="#2407FF" id="lblResults" verticalAlign="top" width="150" textAlign="center" fontWeight="bold"/>
	<s:Label includeIn="Display3D" x="307" y="579" text="Search returned 0 results in 0.00 Seconds rendered 0 in 0.00 seconds" width="402" textAlign="center" color="#2407FF" fontWeight="bold" id="lblSearchRes"/>

	<!--
	<s:HSlider x="457" y="11"  id="sldZoomer" maximum="15" minimum="5" change="c_Display3D.Zoom(sldZoomer.value)" />
	<s:Label x="418" y="10" text="Zoom" color="#B2B2B2"/>
	<s:HSlider x="606" y="11" id="sldFocuser" maximum="30" minimum="5" change="c_Display3D.Focus(sldFocuser.value)"  />
	<s:Label x="570" y="10" text="Focus" color="#B2B2B2"/>
	<s:HSlider x="457" y="26" id="sldXer" maximum="360" minimum="-360" change="c_Display3D.CamX(sldXer.value)"  />
	<s:Label x="418" y="25" text="X" color="#B2B2B2"/>
	<s:HSlider x="606" y="26"  id="sldZer"  maximum="360" minimum="-360" change="c_Display3D.CamZ(sldZer.value)"  />
	<s:Label x="570" y="25" text="Z" color="#B2B2B2"/>
	<s:HSlider  id="sldYawer" maximum="160" minimum="-160"  change="c_Display3D.Yaw(sldYawer.value)"   x="457" y="42"/>
	<s:Label text="Yaw" x="418" y="41" color="#B2B2B2"/>
	<s:HSlider  id="sldPitcher" maximum="160" minimum="-160" change="c_Display3D.Pitch(sldPitcher.value)"  x="606" y="42"/>
	<s:Label text="Pitch" x="570" y="41" color="#B2B2B2"/>
	-->
	
	
	
	
	<fx:Script>
		<![CDATA[
			import com.events.CrudEvent;
			import com.utils.*;
			
			import flash.filters.*;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import valueObjects.SearchFields;
			
			private var ps_CurrentState:String = "";
			private var Database:DatabaseCRUD = DatabaseCRUD.getInstance();
			
			[bindable]
			private var pa_PageCount:Array = [];
			private var pn_CurrentPage:Number = 0;
			private var ps_PreviousSearch:String = "";
			
			
			protected function Display3D_Init(event:Event):void
			{
				
				//setup display border effects
				var myBevel:BevelFilter = new BevelFilter(3.0,45,0x000000,1.0,0,1.0,10,4.0,1,1,BitmapFilterType.FULL);
				var myGlow:GlowFilter = new GlowFilter(0xFFFFFF,0.1,6.0,6.0,2,1,false,false);
				var myBlur:BlurFilter = new BlurFilter();
				brdDisplay.filters = [myBevel, myGlow, myBlur];
				
				ps_CurrentState = "Display3D";

				//initialize display
				cmpDisplay3D.Display3D_Init(lblFps);

				//c_Display3D.Display3D_LoadImages(null);
				Database.addEventListener(CrudEvent.GET_MEMBERINFO, GotMemberInfo);
				Database.CheckLoggedIn();
				
				
			}
			
			public function GotMemberInfo(event:CrudEvent):void
			{
				if (event.errored)
					trace(event.errorMsg);
				
				btnMenu.enabled = true;
				
				if (event.memberFields)
					this.lblLoggedIn.text = "Welcome "  + event.memberFields.FirstName + ' ' + event.memberFields.LastName + ".";
				else
					this.lblLoggedIn.text = "Not logged in.";
				
				search_Click(null);
				Database.removeEventListener(CrudEvent.GET_MEMBERINFO, GotMemberInfo);
			}
				
			protected function getProductInfo(event:CrudEvent):void
			{
				
				if (event.valid)
				{
				ps_CurrentState = "DisplayPlane";
				cmpDisplay3D.Display3D_Hide();
				}else{
					Alert.show(event.errorMsg,"Error getting product information");
					trace("Error getting info");
					
				}
				return;
			}
			
			//hide Display3D and show DisplayPlane
			protected function Display3D_Plane(event:Event):void
			{
				if (Database.gi_CurrentIndex > Database.go_SearchFields.length || Database.gi_CurrentIndex < 0)
				{
					Alert.show("Can't initialize product information","Error loading info");
					return;
				}	
		
				Database.addEventListener(CrudEvent.GET_PRODUCTINFO, getProductInfo);
				var sf:SearchFields = Database.go_SearchFields[Database.gi_CurrentIndex];
				
				
				Database.GetProduct(null,sf.RowID);
				
			}
			
			protected function notLoggedIn(event:Event):void
			{
				this.lblLoggedIn.text = "Not logged in.";
			}
			protected function loggedIn(event:Event):void
			{
				if (Database.go_MemberFields)
					this.lblLoggedIn.text = "Welcome "  + Database.go_MemberFields.FirstName + ' ' + Database.go_MemberFields.LastName + ".";
				else
					this.lblLoggedIn.text = "Logged in";
				
			}
			protected function btnMenu_Click(event:MouseEvent):void
			{
				
				ps_CurrentState = "MenuPlane";
				
				if (currentState == "Display3D")
					cmpDisplay3D.Display3D_Hide();
				else if(currentState == "DisplayPlane")
				{
					cmpDisplayPlane.DisplayPlane_Stop();
					currentState = ps_CurrentState;
				}else if (currentState == "MenuPlane")
				{
					currentState = "Display3D";
					cmpDisplay3D.Display3D_Show(null);
				}
				
				/*if (Database.go_LoginFields.MemberID > 0)
					this.cmpDisplayMenu.currentState = "menu";
				else
					this.cmpDisplayMenu.currentState = "userMenu";
				*/
				if (cmpDisplay3D.currentState == "ImagesLoading")
					currentState = ps_CurrentState;
			}
			
			
			protected function Display3D_Visible(event:Event):void
			{
				//display is visible
				if (event.bubbles)
					ps_CurrentState = "Display3D"
				
			   currentState = ps_CurrentState;
			}


			protected function state1_enterStateHandler(event:FlexEvent):void
			{
				if (Database.gi_CurrentIndex >= 0)
					cmpDisplayPlane.InitPlane();
			}
			
			
			protected function loadBitmapProgressHandler(event:Event):void
			{
				trace("progress");
			}
			
			protected function loadBitmapCompleteHandler(event:Event):void
			{
				var obj:LoaderInfo = event.target as LoaderInfo;
				if(obj.loader)
				{
					var idx:Number = this.cmpDisplay3D.AddImage(int(obj.loader.name), Database.go_SearchFields.length, obj.loader.content);
					if (idx >= Database.go_SearchFields.length)
					{
						var li_CurrentTime:int =  getTimer();
						this.lblSearchRes.text = lblSearchRes.text + " rendered "  + ((li_CurrentTime - pi_Time)/1000).toString().substr(0,4) 	
					}
						
				}
			}
			
			protected function loadBitmapErrorHandler(event:Event):void
			{
				trace("Error");	
			}

			
			
			private var po_base:Base64 = new Base64();
			private function ProcessProduct(product:SearchFields, idx:Number, length:Number):void
			{
				
				var loader:Loader = new Loader();
				//decodeFromHex(product.Image);
				
				loader.loadBytes( po_base.decode(product.Image) );
				loader.name = (idx).toString();
				
				//	loader.contentLoaderInfo.addEventListener( ProgressEvent.PROGRESS, loadBitmapProgressHandler );
				loader.contentLoaderInfo.addEventListener( Event.COMPLETE, loadBitmapCompleteHandler );
				//	loader.contentLoaderInfo.addEventListener( IOErrorEvent.IO_ERROR, loadBitmapErrorHandler );
			}
			
			private var pi_Time:int;
			
			protected function GotSearch(event:CrudEvent):void
			{
				var ctr:Number = 0 ;
				var i:Number=0;
				var li_CurrentTime:int =  getTimer();
				
				if (event.valid == false)
				{
					trace("error getting search fields");
					Alert.show(event.errorMsg, "Error getting search results");
					return;
				}
				if (!Database.go_SearchFields)
				{
					this.lblSearchRes.text = "Search found " + ctr.toString() + " results in "  + ((li_CurrentTime - pi_Time)/1000).toString().substr(0,4) 
						
					return;
				}
				
				
				if (Database.go_SearchFields.length>0)
				{
					var pf:SearchFields = Database.go_SearchFields[i];
					ctr = pf.count;
				}
				
				this.lblSearchRes.text = "Search found " + ctr.toString() + " results in "  + ((li_CurrentTime - pi_Time)/1000).toString().substr(0,4) 
				pi_Time = getTimer();

				
				for (i=0;i<Database.go_SearchFields.length;i++)
				{
					pf = Database.go_SearchFields[i];
					ctr = pf.count;
					ProcessProduct(pf, i, Database.go_SearchFields.length);
				}
	
				li_CurrentTime =  getTimer();
				this.lblSearchRes.text = lblSearchRes.text + " decoded in " + ((li_CurrentTime - pi_Time)/1000).toString().substr(0,4) 	
				pi_Time = getTimer();
					
				var iCtr:Number = ctr / Database.MAX_RESULTS_PAGE;
				
				
				for (i=1; i < (iCtr+1); i++)
				{
					pa_PageCount.push(i.toString() );
				}
				this.cmbPagesArray.source = pa_PageCount;
				
				if (pn_CurrentPage == -1)
					pn_CurrentPage = 0;
				cmbPages.selectedIndex = pn_CurrentPage;
					
				btnBack.enabled = true;
				btnForward.enabled = true;
					
				if (pn_CurrentPage == 0)
					btnBack.enabled = false;
	
				if (pn_CurrentPage >= i-2)
					btnForward.enabled = false;
				
				lblResults.text = "Showing page " + (pn_CurrentPage+1).toString() + " of " + (i-1).toString();
				
			}
			
			protected function search_Click(event:MouseEvent):void
			{
				if ((event && txtSearch.text =="") || ps_PreviousSearch == search)
					return;
				//check new search
				if (ps_PreviousSearch != search)
					cmbPages.selectedIndex = 0;
				else
				{
					trace("already searched");
					return; //already searched this
				}
				
				pi_Time = getTimer();
				
				pa_PageCount = [];
				this.cmpDisplay3D.ClearUp();
				
				
				Database.addEventListener(CrudEvent.SEARCH, GotSearch);
				var search:String = txtSearch.text;
				if (search == "")
					search = "null"
						

				pn_CurrentPage = cmbPages.selectedIndex;
				if (pn_CurrentPage == -1)
					pn_CurrentPage = 0;
				
				Database.Search(null,search, pn_CurrentPage );
				ps_PreviousSearch = search;
			}


			protected function state2_enterStateHandler(event:FlexEvent):void
			{
				Database.removeEventListener("loggedIn",loggedIn);
				Database.addEventListener("loggedIn",loggedIn);
				
				Database.removeEventListener("notLoggedIn",notLoggedIn);
				Database.addEventListener("notLoggedIn",notLoggedIn);
				
			}

		]]>
	</fx:Script>

	
</s:Application>
